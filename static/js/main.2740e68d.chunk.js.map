{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","sortByAlphabet","setState","ALPHABET","sortByLength","LENGTH","reverseGoods","resetSort","this","sortedGoods","goods","visibleGoods","sort","good1","good2","localeCompare","length","reverse","console","log","getReorderedGoods","className","type","classNames","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAyCE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,eAAiB,WACf,EAAKC,SAAS,CACZH,SAAUL,EAASS,YARzB,EAYEC,aAAe,WACb,EAAKF,SAAS,CAAEH,SAAUL,EAASW,UAbvC,EAgBEC,aAAe,WACb,EAAKJ,UAAS,SAACL,GAAD,MAAY,CACxBC,YAAaD,EAAMC,gBAlBzB,EAsBES,UAAY,WACV,EAAKL,SAAS,CACZJ,YAAY,EACZC,SAAUL,EAASM,QAzBzB,4CA6BE,WACE,MAAiCQ,KAAKX,MAA9BE,EAAR,EAAQA,SAAUD,EAAlB,EAAkBA,WACZW,EAlEH,SACLC,EADK,GAGJ,IADCX,EACF,EADEA,SAAUD,EACZ,EADYA,WAENa,EAAY,YAAOD,GAuBzB,OArBAC,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQf,GACN,KAAKL,EAASS,SACZ,OAAOU,EAAME,cAAcD,GAE7B,KAAKpB,EAASW,OACZ,OAAOQ,EAAMG,OAASF,EAAME,OAE9B,KAAKtB,EAASM,KACd,QACE,OAAO,MAITF,GACFa,EAAaM,UAIfC,QAAQC,IAAIpB,EAAUD,GAEfa,EAuCeS,CAClBzB,EACAa,KAAKX,OAGP,OACE,sBAAKwB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYxB,IAAaL,EAASS,WAEtCqB,QAAShB,KAAKP,eAPhB,iCAYA,wBACEqB,KAAK,SACLE,QAAShB,KAAKJ,aACdiB,UAAWE,IACT,SACA,aACA,CAAE,WAAYxB,IAAaL,EAASW,SANxC,4BAYA,wBACEiB,KAAK,SACLE,QAAShB,KAAKF,aACde,UAAWE,IACT,SACA,aACA,CAAE,YAA2B,IAAfzB,IANlB,qBAYCC,IAAaL,EAASM,MAAQF,EAE3B,wBACE0B,QAAShB,KAAKD,UACde,KAAK,SACLD,UAAU,4BAHZ,mBAQA,QAGN,6BACGZ,EAAYgB,KAAI,SAAAC,GAAI,OACnB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,eA1FpC,GAAyBC,IAAMC,WCxD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2740e68d.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: State,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((good1, good2): number => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return good1.localeCompare(good2);\n\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n\n      case SortType.NONE:\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\ninterface State {\n  isReversed : boolean;\n  sortType: SortType;\n}\n\nexport class App extends React.Component <{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortByAlphabet = () => {\n    this.setState({\n      sortType: SortType.ALPHABET,\n    });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  reverseGoods = () => {\n    this.setState((state) => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  resetSort = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    const { sortType, isReversed } = this.state;\n    const sortedGoods = getReorderedGoods(\n      goodsFromServer,\n      this.state,\n    );\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-info',\n              { 'is-light': sortType !== SortType.ALPHABET },\n            )}\n            onClick={this.sortByAlphabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={this.sortByLength}\n            className={classNames(\n              'button',\n              'is-success',\n              { 'is-light': sortType !== SortType.LENGTH },\n            )}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={this.reverseGoods}\n            className={classNames(\n              'button',\n              'is-warning',\n              { 'is-light': isReversed === false },\n            )}\n          >\n            Reverse\n          </button>\n\n          {sortType !== SortType.NONE || isReversed\n            ? (\n              <button\n                onClick={this.resetSort}\n                type=\"button\"\n                className=\"button is-danger is-light\"\n              >\n                Reset\n              </button>\n            )\n            : null}\n        </div>\n\n        <ul>\n          {sortedGoods.map(good => (\n            <li data-cy=\"Good\" key={good}>\n              {good}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}